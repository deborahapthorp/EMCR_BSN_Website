blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
library(thematic)
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::serve_site()
In the second session, Professor Yi Qian, Dr Adam Martin (pictured above) and Dr Lindsay Parker from Macquarie University shared their insights on the application of mechanical engineering to cerebrovascular diseases, developing peptide hydrogels to culture primary neurons and targeting sugar-coated nanoparticles to brain cells, respectively. In the final session for the day, Associate Professor Elizabeth New (University of Sydney) delivered an exciting talk about bionanosensors to study cellular activity, while Marina Ulanova (University of New South Wales) and Dr Bingyang Shi (Macquarie University) provided different views on delivering nanoparticles across the blood-brain-barrier.
The symposium concluded with a networking opportunity to discuss potential collaborations, future prospects, and potential new directions. The next Nano-Brain Research Symposium is tentatively scheduled to occur in conjunction with the International Conference in BioNano Innovation 2020 (ICBN2020) that will be part of the International Conference On Nanoscience and Nanotechnology (ICONN2020) in Brisbane, Queensland. For more information about the upcoming symposium and expressions of interest to participate, please email olga.shimoni@uts.edu.au
blogdown::stop_server()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
## Ethical approval and what to do if you're upset
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::serve_site()
setwd("~/Dropbox (Personal)/UNE/Collaborations/Data Badge Project")
library(tidyverse)
library(reshape2)
library(RColorBrewer)
#read in data
ratings <- read.csv("Reproducibility_Ratings.csv", sep=",", na.strings=c("","NA"))
#transpose
ratings_t <- as.data.frame(t(ratings))
#change column names and row names to first column and row
colnames(ratings_t) <- ratings_t[1, ]
rownames(ratings_t) <- ratings_t[,1]
#remove superfluous first row
ratings_t <- ratings_t[-1,]
#subset group and individual ratings
ratings_individual <- ratings_t[seq(1, nrow(ratings_t), 2), ]
ratings_group <- ratings_t[seq(2, nrow(ratings_t), 2), ]
#wide to long format
ratings_individual <- melt(ratings_individual, id.vars = "Name")
ratings_group <- melt(ratings_group, id.vars = "Name")
#ratings values as factor
ratings_individual$value <- factor(ratings_individual$value)
ratings_group$value <- factor(ratings_group$value)
#vector for "anonymising" articles
articles <- c("Article 1", "Article 2","Article 3", "Article 4", "Article 5", "Article 6", "Article 7", "Article 8", "Article 9", "Article 10", "Article 11", "Article 12", "Article 13", "Article 14")
#create stacked bar plot for individual ratings
ratings_individual %>% filter(!is.na(value)) %>% ggplot(aes(x=fct_rev(Name), fill = value)) +
geom_bar(stat="count")+ coord_flip() + scale_x_discrete(labels = rev(articles)) +
labs(x = NULL, y = NULL) +
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_manual(values=brewer.pal(5, "Blues"),
name="Reproducibility Rating",
breaks=5:1,
labels=c("Not at all", "Mostly not", "Partially", "Essentially", "Exactly"))+
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent",colour = NA)
)
ggsave("individual.png")
#create stacked bar plot for group ratings
ratings_group %>% filter(!is.na(value)) %>% ggplot(aes(x=fct_rev(Name), fill = value)) +
geom_bar(stat="count")+ coord_flip() + scale_x_discrete(labels = rev(articles)) +
labs(x = NULL, y = NULL) +
theme(plot.title = element_text(hjust = 0.5))+
scale_fill_manual(values=brewer.pal(5, "Blues"),
name="Reproducibility Rating",
breaks=5:1,
labels=c("Not at all", "Mostly not", "Partially", "Essentially", "Exactly")) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent",colour = NA)
)
ggsave("group.png")
View(ratings)
blogdown:::preview_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::build_site()
blogdown:::serve_site()
install.packages("blogdown")
blogdown:::build_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::preview_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::build_site()
install.packages('blogdown')
blogdown:::build_site()
blogdown:::build_site()
blogdown:::build_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::preview_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::build_site()
blogdown:::serve_site()
